version: '3'

services:

 app:
  build: .
  container_name: app
  entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
  environment:
    - DB_HOST=db
    - DB_DATABASE=laravel
    - DB_USERNAME=root
    - DB_PASSWORD=root
  volumes:
   - .:/var/www
  networks:
   - app-network
  depends_on: 
    - db
    - redis

 nginx:
  # entrypoint: dockerize -template ./.docker/nginx/nginx-template.conf:nginx/nginx.conf ./.docker/nginx/entrypoint.sh
  build: .docker/nginx
  container_name: nginx
  environment:
    - NGINX_HOST=app
    - NGINX_PORT=9000
  restart: always
  tty: true
  ports:
   - "8080:80"
  volumes:
   - .:/var/www
  networks:
   - app-network
  depends_on:
    - app

 redis:
  image: redis:alpine
  expose:
   - 6379
  networks:
   - app-network

 db:
  build: .docker/mysql
  image: mysql:5.7
  command: --innodb-use-native-aio=0
  container_name: db
  restart: always
  tty: true
  ports:
   - "33006:3306"
  volumes:
   - ./.docker/dbdata:/var/lib/mysql
  environment:
   - MYSQL_DATABASE=laravel
   - MYSQL_ROOT_PASSWORD=root
   - MYSQL_USER=root
  networks:
   - app-network
  # healthcheck:
  #  test: ["CMD-SHELL", 'mysql -uroot --database=laravel --password=root --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
  #  interval: 10s
  #  timeout: 10s
  #  retries: 4
  
networks:
 app-network:
  driver: bridge
  
  